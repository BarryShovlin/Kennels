[{"/Users/barry-shovlin/workspace/kennels/src/index.js":"1","/Users/barry-shovlin/workspace/kennels/src/reportWebVitals.js":"2","/Users/barry-shovlin/workspace/kennels/src/components/Kennel.js":"3","/Users/barry-shovlin/workspace/kennels/src/components/animal/AnimalCard.js":"4","/Users/barry-shovlin/workspace/kennels/src/components/Locations/Location.js":"5","/Users/barry-shovlin/workspace/kennels/src/components/Employees/Employee.js":"6","/Users/barry-shovlin/workspace/kennels/src/components/Customers/Customer.js":"7","/Users/barry-shovlin/workspace/kennels/src/components/ApplicationViews.js":"8","/Users/barry-shovlin/workspace/kennels/src/components/nav/NavBar.js":"9","/Users/barry-shovlin/workspace/kennels/src/components/Home.js":"10","/Users/barry-shovlin/workspace/kennels/src/components/animal/AnimalProvider.js":"11","/Users/barry-shovlin/workspace/kennels/src/components/animal/AnimalList.js":"12","/Users/barry-shovlin/workspace/kennels/src/components/Customers/CustomerProvider.js":"13","/Users/barry-shovlin/workspace/kennels/src/components/Employees/EmployeeProvider.js":"14","/Users/barry-shovlin/workspace/kennels/src/components/Locations/LocationProvider.js":"15","/Users/barry-shovlin/workspace/kennels/src/components/Customers/CustomerList.js":"16","/Users/barry-shovlin/workspace/kennels/src/components/Employees/EmployeeList.js":"17","/Users/barry-shovlin/workspace/kennels/src/components/Locations/LocationList.js":"18","/Users/barry-shovlin/workspace/kennels/src/components/animal/AnimalForm.js":"19","/Users/barry-shovlin/workspace/kennels/src/components/animal/AnimalDetail.js":"20","/Users/barry-shovlin/workspace/kennels/src/components/Employees/EmployeeForm.js":"21","/Users/barry-shovlin/workspace/kennels/src/components/Locations/LocationForm.js":"22"},{"size":336,"mtime":1611555986798,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":1611171494651,"results":"25","hashOfConfig":"24"},{"size":378,"mtime":1611596194456,"results":"26","hashOfConfig":"24"},{"size":396,"mtime":1611677388443,"results":"27","hashOfConfig":"24"},{"size":287,"mtime":1611691376001,"results":"28","hashOfConfig":"24"},{"size":289,"mtime":1611555678989,"results":"29","hashOfConfig":"24"},{"size":289,"mtime":1611555777324,"results":"30","hashOfConfig":"24"},{"size":2043,"mtime":1611690744655,"results":"31","hashOfConfig":"24"},{"size":886,"mtime":1611555101817,"results":"32","hashOfConfig":"24"},{"size":358,"mtime":1611555349367,"results":"33","hashOfConfig":"24"},{"size":1036,"mtime":1611697538941,"results":"34","hashOfConfig":"24"},{"size":765,"mtime":1611683410713,"results":"35","hashOfConfig":"24"},{"size":853,"mtime":1611597406195,"results":"36","hashOfConfig":"24"},{"size":1065,"mtime":1611697230309,"results":"37","hashOfConfig":"24"},{"size":862,"mtime":1611691045530,"results":"38","hashOfConfig":"24"},{"size":644,"mtime":1611555840291,"results":"39","hashOfConfig":"24"},{"size":776,"mtime":1611681448260,"results":"40","hashOfConfig":"24"},{"size":775,"mtime":1611691334566,"results":"41","hashOfConfig":"24"},{"size":4909,"mtime":1611597214174,"results":"42","hashOfConfig":"24"},{"size":851,"mtime":1611677591500,"results":"43","hashOfConfig":"24"},{"size":2454,"mtime":1611682168865,"results":"44","hashOfConfig":"24"},{"size":1923,"mtime":1611691492396,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"k1yrl0",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"48"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"48"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"48"},"/Users/barry-shovlin/workspace/kennels/src/index.js",[],["101","102"],"/Users/barry-shovlin/workspace/kennels/src/reportWebVitals.js",[],["103","104"],"/Users/barry-shovlin/workspace/kennels/src/components/Kennel.js",[],"/Users/barry-shovlin/workspace/kennels/src/components/animal/AnimalCard.js",[],"/Users/barry-shovlin/workspace/kennels/src/components/Locations/Location.js",[],"/Users/barry-shovlin/workspace/kennels/src/components/Employees/Employee.js",[],["105","106"],"/Users/barry-shovlin/workspace/kennels/src/components/Customers/Customer.js",[],"/Users/barry-shovlin/workspace/kennels/src/components/ApplicationViews.js",[],"/Users/barry-shovlin/workspace/kennels/src/components/nav/NavBar.js",[],"/Users/barry-shovlin/workspace/kennels/src/components/Home.js",[],"/Users/barry-shovlin/workspace/kennels/src/components/animal/AnimalProvider.js",[],"/Users/barry-shovlin/workspace/kennels/src/components/animal/AnimalList.js",["107"],"import React, { useContext, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\"\nimport { AnimalContext } from \"./AnimalProvider\";\nimport { AnimalCard } from \"./AnimalCard\";\nimport \"./Animal.css\";\n\nexport const AnimalList = () => {\n  const { animals, getAnimals } = useContext(AnimalContext);\n  const history = useHistory()\n\n  useEffect(() => {\n    getAnimals()\n  }, []);\n\n\n  return (\n    <>\n        <h1>Animals</h1>\n\n        <button onClick={() => history.push(\"/animals/create\")}>\n            Add Animal\n        </button>\n        <div className=\"animals\">\n            {\n                animals.map(animal => {\n                    return <AnimalCard key={animal.id} animal={animal} />\n                })\n            }\n        </div>\n    </>\n)\n};","/Users/barry-shovlin/workspace/kennels/src/components/Customers/CustomerProvider.js",[],"/Users/barry-shovlin/workspace/kennels/src/components/Employees/EmployeeProvider.js",["108"],"/Users/barry-shovlin/workspace/kennels/src/components/Locations/LocationProvider.js",[],"/Users/barry-shovlin/workspace/kennels/src/components/Customers/CustomerList.js",["109"],"import React, { useContext, useEffect } from \"react\";\nimport { CustomerContext } from \"./CustomerProvider\";\nimport { CustomerCard } from \"./Customer\";\nimport \"./Customer.css\";\n\nexport const CustomerList = () => {\n  const { customers, getCustomers } = useContext(CustomerContext);\n\n  useEffect(() => {\n    console.log(\"CustomerList: useEffect - getCustomers\");\n    getCustomers();\n\n  }, []);\n\n\n  return (\n    <div className=\"customers\">\n      {console.log(\"CustomerList: Render\", customers)}\n      {\n        customers.map(customer => {\n          return <CustomerCard key={customer.id} customer={customer} />\n        })\n      }\n    </div>\n  );\n};","/Users/barry-shovlin/workspace/kennels/src/components/Employees/EmployeeList.js",["110"],"import React, { useContext, useEffect } from \"react\";\nimport { EmployeeContext } from \"./EmployeeProvider\";\nimport { EmployeeCard } from \"./Employee\";\nimport \"./Employee.css\";\nimport { useHistory } from \"react-router-dom\"\n\n\n\nexport const EmployeeList = () => {\n  const { employees, getEmployees } = useContext(EmployeeContext);\n  const history = useHistory()\n\n  useEffect(() => {\n    console.log(\"EmployeeList: useEffect - getEmployees\");\n    getEmployees();\n\n  }, []);\n\n\n  return (\n    <>\n    <h2>Employees</h2>\n<button onClick={() => {history.push(\"/employees/create\")}}>\n        Add Employee\n    </button>\n    <div className=\"employees\">\n    {\n  employees.map(employee => {\n    return <EmployeeCard key={employee.id} employee={employee} />\n  })\n    }\n    </div>\n</>\n  );\n};","/Users/barry-shovlin/workspace/kennels/src/components/Locations/LocationList.js",["111"],"import React, { useContext, useEffect } from \"react\";\nimport { LocationContext } from \"./LocationProvider\";\nimport { LocationCard } from \"./Location\";\nimport \"./Location.css\";\nimport { useHistory } from \"react-router-dom\"\n\nexport const LocationList = () => {\n  const { locations, getLocations } = useContext(LocationContext);\n\n  useEffect(() => {\n    console.log(\"LocationList: useEffect - getLocations\");\n    getLocations();\n\n  }, []);\n  const history = useHistory()\n\n\n  return (\n    <>\n    <h2>Locations</h2>\n<button onClick={() => {history.push(\"/locations/create\")}}>\n        Add a Loaction\n    </button>\n    <div className=\"locations\">\n    {\n  locations.map(location => {\n    return <LocationCard key={location.id} location={location} />\n  })\n    }\n    </div>\n</>\n  )\n};","/Users/barry-shovlin/workspace/kennels/src/components/animal/AnimalForm.js",["112"],"import React, { useContext, useEffect, useState } from \"react\"\nimport { LocationContext } from \"../Locations/LocationProvider\"\nimport { AnimalContext } from \"../animal/AnimalProvider\"\nimport { CustomerContext } from \"../Customers/CustomerProvider\"\nimport \"./Animal.css\"\nimport { useHistory } from 'react-router-dom';\n\nexport const AnimalForm = () => {\n    const { addAnimal } = useContext(AnimalContext)\n    const { locations, getLocations } = useContext(LocationContext)\n    const { customers, getCustomers } = useContext(CustomerContext)\n\n    /*\n    With React, we do not target the DOM with `document.querySelector()`. Instead, our return (render) reacts to state or props.\n\n    Define the intial state of the form inputs with useState()\n    */\n\n    const [animal, setAnimal] = useState({\n      name: \"\",\n      breed: \"\",\n      locationId: 0,\n      customerId: 0\n    });\n\n    const history = useHistory();\n\n    /*\n    Reach out to the world and get customers state\n    and locations state on initialization, so we can provide their data in the form dropdowns\n    */\n    useEffect(() => {\n      getCustomers().then(getLocations)\n    }, [])\n\n    //when a field changes, update state. The return will re-render and display based on the values in state\n        // NOTE! What's happening in this function can be very difficult to grasp. Read it over many times and ask a lot questions about it.\n    //Controlled component\n    const handleControlledInputChange = (event) => {\n      /* When changing a state object or array,\n      always create a copy, make changes, and then set state.*/\n      const newAnimal = { ...animal }\n      let selectedVal = event.target.value\n      // forms always provide values as strings. But we want to save the ids as numbers. This will cover both customer and location ids\n      if (event.target.id.includes(\"Id\")) {\n        selectedVal = parseInt(selectedVal)\n      }\n      /* Animal is an object with properties.\n      Set the property to the new value\n      using object bracket notation. */\n      newAnimal[event.target.id] = selectedVal\n      // update state\n      setAnimal(newAnimal)\n    }\n\n    const handleClickSaveAnimal = (event) => {\n      event.preventDefault() //Prevents the browser from submitting the form\n\n      const locationId = animal.locationId\n      const customerId = animal.customerId\n\n      if (locationId === 0 || customerId === 0) {\n        window.alert(\"Please select a location and a customer\")\n      } else {\n        //invoke addAnimal passing animal as an argument.\n        //once complete, change the url and display the animal list\n        addAnimal(animal)\n        .then(() => history.push(\"/animals\"))\n      }\n    }\n\n    return (\n      <form className=\"animalForm\">\n          <h2 className=\"animalForm__title\">New Animal</h2>\n          <fieldset>\n              <div className=\"form-group\">\n                  <label htmlFor=\"name\">Animal name:</label>\n                  <input type=\"text\" id=\"name\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" placeholder=\"Animal name\" value={animal.name}/>\n              </div>\n          </fieldset>\n          <fieldset>\n              <div className=\"form-group\">\n                  <label htmlFor=\"breed\">Animal breed:</label>\n                  <input type=\"text\" id=\"breed\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" placeholder=\"Animal breed\" value={animal.breed}/>\n              </div>\n          </fieldset>\n          <fieldset>\n              <div className=\"form-group\">\n                  <label htmlFor=\"location\">Assign to location: </label>\n                  <select defaultValue={animal.locationId} name=\"locationId\" id=\"locationId\" onChange={handleControlledInputChange} className=\"form-control\" >\n                      <option value=\"0\">Select a location</option>\n                      {locations.map(l => (\n                          <option key={l.id} value={l.id}>\n                              {l.name}\n                          </option>\n                      ))}\n                  </select>\n              </div>\n          </fieldset>\n          <fieldset>\n              <div className=\"form-group\">\n                  <label htmlFor=\"customerId\">Customer: </label>\n                  <select defaultValue={animal.customerId} name=\"customer\" id=\"customerId\" onChange={handleControlledInputChange} className=\"form-control\" >\n                      <option value=\"0\">Select a customer</option>\n                      {customers.map(c => (\n                          <option key={c.id} value={c.id}>\n                              {c.name}\n                          </option>\n                      ))}\n                  </select>\n              </div>\n          </fieldset>\n          <button className=\"btn btn-primary\"\n            onClick={handleClickSaveAnimal}>\n            Save Animal\n          </button>\n      </form>\n    )\n}","/Users/barry-shovlin/workspace/kennels/src/components/animal/AnimalDetail.js",["113","114"],"import React, { useContext, useEffect, useState } from \"react\"\nimport { AnimalContext } from \"./AnimalProvider\"\nimport \"./Animal.css\"\nimport { useParams, useHistory } from \"react-router-dom\"\n\nexport const AnimalDetail = () => {\n  const { getAnimalById } = useContext(AnimalContext)\n\n\tconst [animal, setAnimal] = useState({})\n\n\tconst {animalId} = useParams();\n\n  useEffect(() => {\n    console.log(\"useEffect\", animalId)\n    getAnimalById(animalId)\n    .then((response) => {\n      setAnimal(response)\n    })\n    }, [])\n\n  return (\n    <section className=\"animal\">\n      <h3 className=\"animal__name\">{animal.name}</h3>\n      <div className=\"animal__breed\">{animal.breed}</div>\n      <div className=\"animal__location\">Location: {animal.location?.name}</div>\n      <div className=\"animal__owner\">Customer: {animal.customer?.name}</div>\n    </section>\n  )\n}","/Users/barry-shovlin/workspace/kennels/src/components/Employees/EmployeeForm.js",["115"],"import React, { useContext, useEffect, useState } from \"react\"\nimport { LocationContext } from \"../Locations/LocationProvider\"\nimport { EmployeeContext } from \"./EmployeeProvider\"\nimport \"./Employee.css\"\nimport { useHistory } from \"react-router-dom\"\n\nexport const EmployeeForm = () => {\n    const { locations, getLocations } = useContext(LocationContext)\n    const { addEmployee } = useContext(EmployeeContext)\n    const history = useHistory()\n\n    const [employee, setEmployees] = useState({\n        name: \"\",\n        locationId: 0\n    })\n\n\n    useEffect(() => {\n        getLocations()\n    }, [])\n\n    const handleControlledInputChange = (event) => {\n        const newEmployee = { ...employee }\n        newEmployee[event.target.id] = event.target.value\n        setEmployees(newEmployee)\n    }\n\n    const handleClickSaveEmployee = (event) => {\n        event.preventDefault()\n\n        const locationId = parseInt(employee.locationId)\n\n        if (locationId === 0) {\n            window.alert(\"Please select a location\")\n        } else {\n            addEmployee(employee)\n            .then(() => history.push(\"/employees\"))\n        }\n    }\n\n    return (\n        <form className=\"employeeForm\">\n            <h2 className=\"employeeForm__title\">New Employee</h2>\n            <fieldset>\n                <div className=\"form-group\">\n                    <label htmlFor=\"name\">Employee name:</label>\n                    <input type=\"text\" id=\"name\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" placeholder=\"Employee name\" value={employee.name}/>\n                </div>\n            </fieldset>\n            <fieldset>\n                <div className=\"form-group\">\n                    <label htmlFor=\"locationId\">Location:</label>\n                    <select defaultValue={employee.locationId} name=\"locationId\" id=\"locationId\" onChange={handleControlledInputChange} className=\"form-control\">\n                        <option value=\"0\">Select a location</option>\n                        {locations.map(l => (\n                            <option key={l.id} value={l.id}>\n                                {l.name}\n                            </option>\n                        ))}\n                        </select>\n                </div>\n            </fieldset>\n            <button className=\"btn btn-primary\"\n            onClick={handleClickSaveEmployee}>\n                Save Employee\n            </button>\n        </form>\n    )\n}\n\n","/Users/barry-shovlin/workspace/kennels/src/components/Locations/LocationForm.js",["116","117"],"\nimport React, { useContext, useEffect, useState } from \"react\"\nimport { LocationContext } from \"./LocationProvider\"\nimport { getLocations } from \"./LocationProvider\"\nimport \"./Location.css\"\nimport { useHistory } from \"react-router-dom\"\n\n\nexport const LocationForm = () => {\n    const { addLocation } = useContext(LocationContext)\n\n    const [ location, setLocation] = useState({\n        name: \"\",\n        address: \"\"\n    })\n\n    const history = useHistory()\n\n    // useEfffect(() => {\n    //     getLocations()\n    // }, [])\n\n    const handleControlledInputChange = (event) => {\n        const newLocation = { ...location }\n        newLocation[event.target.id] = event.target.value\n        setLocation(newLocation)\n    }\n    \n    const handleClickSaveLocation = (event) => {\n        event.preventDefault()\n        addLocation(location)\n        .then(() => history.push(\"/locations\"))\n    }\n\n    return (\n        <form className=\"locationForm\">\n            <h2 className=\"locationForm__title\">New Location</h2>\n            <fieldset>\n                <div className=\"form-group\">\n                    <label htmlFor=\"name\">Location name:</label>\n                    <input type=\"text\" id=\"name\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" placeholder=\"Location name\" value={location.name}/>\n                </div>\n            </fieldset>\n            <fieldset>\n                <div className=\"form-group\">\n                    <label htmlFor=\"address\">Location address:</label>\n                    <input type=\"text\" id=\"address\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" placeholder=\"Location address\" value={location.address}/>\n                </div>\n            </fieldset>\n            <button className=\"btn btn-primary\"\n            onClick={handleClickSaveLocation}>\n                Save Location\n            </button>\n        </form>\n    )\n}",{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"118","replacedBy":"122"},{"ruleId":"120","replacedBy":"123"},{"ruleId":"118","replacedBy":"124"},{"ruleId":"120","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":13,"column":6,"nodeType":"128","endLine":13,"endColumn":8,"suggestions":"129"},{"ruleId":"130","severity":1,"message":"131","line":27,"column":22,"nodeType":"132","messageId":"133","endLine":27,"endColumn":93},{"ruleId":"126","severity":1,"message":"134","line":13,"column":6,"nodeType":"128","endLine":13,"endColumn":8,"suggestions":"135"},{"ruleId":"126","severity":1,"message":"136","line":17,"column":6,"nodeType":"128","endLine":17,"endColumn":8,"suggestions":"137"},{"ruleId":"126","severity":1,"message":"138","line":14,"column":6,"nodeType":"128","endLine":14,"endColumn":8,"suggestions":"139"},{"ruleId":"126","severity":1,"message":"140","line":34,"column":8,"nodeType":"128","endLine":34,"endColumn":10,"suggestions":"141"},{"ruleId":"142","severity":1,"message":"143","line":4,"column":21,"nodeType":"144","messageId":"145","endLine":4,"endColumn":31},{"ruleId":"126","severity":1,"message":"146","line":19,"column":8,"nodeType":"128","endLine":19,"endColumn":10,"suggestions":"147"},{"ruleId":"126","severity":1,"message":"138","line":20,"column":8,"nodeType":"128","endLine":20,"endColumn":10,"suggestions":"148"},{"ruleId":"142","severity":1,"message":"149","line":2,"column":29,"nodeType":"144","messageId":"145","endLine":2,"endColumn":38},{"ruleId":"142","severity":1,"message":"150","line":4,"column":10,"nodeType":"144","messageId":"145","endLine":4,"endColumn":22},"no-native-reassign",["151"],"no-negated-in-lhs",["152"],["151"],["152"],["151"],["152"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getAnimals'. Either include it or remove the dependency array.","ArrayExpression",["153"],"no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","React Hook useEffect has a missing dependency: 'getCustomers'. Either include it or remove the dependency array.",["154"],"React Hook useEffect has a missing dependency: 'getEmployees'. Either include it or remove the dependency array.",["155"],"React Hook useEffect has a missing dependency: 'getLocations'. Either include it or remove the dependency array.",["156"],"React Hook useEffect has missing dependencies: 'getCustomers' and 'getLocations'. Either include them or remove the dependency array.",["157"],"no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'animalId' and 'getAnimalById'. Either include them or remove the dependency array.",["158"],["159"],"'useEffect' is defined but never used.","'getLocations' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"160","fix":"161"},{"desc":"162","fix":"163"},{"desc":"164","fix":"165"},{"desc":"166","fix":"167"},{"desc":"168","fix":"169"},{"desc":"170","fix":"171"},{"desc":"166","fix":"172"},"Update the dependencies array to be: [getAnimals]",{"range":"173","text":"174"},"Update the dependencies array to be: [getCustomers]",{"range":"175","text":"176"},"Update the dependencies array to be: [getEmployees]",{"range":"177","text":"178"},"Update the dependencies array to be: [getLocations]",{"range":"179","text":"180"},"Update the dependencies array to be: [getCustomers, getLocations]",{"range":"181","text":"182"},"Update the dependencies array to be: [animalId, getAnimalById]",{"range":"183","text":"184"},{"range":"185","text":"180"},[386,388],"[getAnimals]",[386,388],"[getCustomers]",[465,467],"[getEmployees]",[432,434],"[getLocations]",[1138,1140],"[getCustomers, getLocations]",[513,515],"[animalId, getAnimalById]",[594,596]]