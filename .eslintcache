[{"/Users/barry-shovlin/workspace/kennels/src/index.js":"1","/Users/barry-shovlin/workspace/kennels/src/reportWebVitals.js":"2","/Users/barry-shovlin/workspace/kennels/src/components/Kennel.js":"3","/Users/barry-shovlin/workspace/kennels/src/components/animal/AnimalCard.js":"4","/Users/barry-shovlin/workspace/kennels/src/components/Locations/Location.js":"5","/Users/barry-shovlin/workspace/kennels/src/components/Employees/Employee.js":"6","/Users/barry-shovlin/workspace/kennels/src/components/Customers/Customer.js":"7","/Users/barry-shovlin/workspace/kennels/src/components/ApplicationViews.js":"8","/Users/barry-shovlin/workspace/kennels/src/components/nav/NavBar.js":"9","/Users/barry-shovlin/workspace/kennels/src/components/Home.js":"10","/Users/barry-shovlin/workspace/kennels/src/components/animal/AnimalProvider.js":"11","/Users/barry-shovlin/workspace/kennels/src/components/animal/AnimalList.js":"12","/Users/barry-shovlin/workspace/kennels/src/components/Customers/CustomerProvider.js":"13","/Users/barry-shovlin/workspace/kennels/src/components/Employees/EmployeeProvider.js":"14","/Users/barry-shovlin/workspace/kennels/src/components/Locations/LocationProvider.js":"15","/Users/barry-shovlin/workspace/kennels/src/components/Customers/CustomerList.js":"16","/Users/barry-shovlin/workspace/kennels/src/components/Employees/EmployeeList.js":"17","/Users/barry-shovlin/workspace/kennels/src/components/Locations/LocationList.js":"18","/Users/barry-shovlin/workspace/kennels/src/components/animal/AnimalForm.js":"19"},{"size":336,"mtime":1611555986798,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1611171494651,"results":"22","hashOfConfig":"21"},{"size":378,"mtime":1611596194456,"results":"23","hashOfConfig":"21"},{"size":400,"mtime":1611588166998,"results":"24","hashOfConfig":"21"},{"size":284,"mtime":1611555611299,"results":"25","hashOfConfig":"21"},{"size":289,"mtime":1611555678989,"results":"26","hashOfConfig":"21"},{"size":289,"mtime":1611555777324,"results":"27","hashOfConfig":"21"},{"size":1716,"mtime":1611605273376,"results":"28","hashOfConfig":"21"},{"size":886,"mtime":1611555101817,"results":"29","hashOfConfig":"21"},{"size":358,"mtime":1611555349367,"results":"30","hashOfConfig":"21"},{"size":846,"mtime":1611555924207,"results":"31","hashOfConfig":"21"},{"size":1271,"mtime":1611596923326,"results":"32","hashOfConfig":"21"},{"size":853,"mtime":1611597406195,"results":"33","hashOfConfig":"21"},{"size":879,"mtime":1611555735439,"results":"34","hashOfConfig":"21"},{"size":862,"mtime":1611555556326,"results":"35","hashOfConfig":"21"},{"size":644,"mtime":1611555840291,"results":"36","hashOfConfig":"21"},{"size":644,"mtime":1611555752251,"results":"37","hashOfConfig":"21"},{"size":644,"mtime":1611555575916,"results":"38","hashOfConfig":"21"},{"size":4909,"mtime":1611597214174,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"k1yrl0",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"42"},"/Users/barry-shovlin/workspace/kennels/src/index.js",[],["85","86"],"/Users/barry-shovlin/workspace/kennels/src/reportWebVitals.js",[],["87","88"],"/Users/barry-shovlin/workspace/kennels/src/components/Kennel.js",[],"/Users/barry-shovlin/workspace/kennels/src/components/animal/AnimalCard.js",[],"/Users/barry-shovlin/workspace/kennels/src/components/Locations/Location.js",[],"/Users/barry-shovlin/workspace/kennels/src/components/Employees/Employee.js",[],"/Users/barry-shovlin/workspace/kennels/src/components/Customers/Customer.js",[],"/Users/barry-shovlin/workspace/kennels/src/components/ApplicationViews.js",[],"/Users/barry-shovlin/workspace/kennels/src/components/nav/NavBar.js",[],"/Users/barry-shovlin/workspace/kennels/src/components/Home.js",[],"/Users/barry-shovlin/workspace/kennels/src/components/animal/AnimalProvider.js",[],"/Users/barry-shovlin/workspace/kennels/src/components/animal/AnimalList.js",["89"],"import React, { useContext, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\"\nimport { AnimalContext } from \"./AnimalProvider\";\nimport { LocationContext } from \"../Locations/LocationProvider\";\nimport { CustomerContext } from \"../Customers/CustomerProvider\";\nimport { AnimalCard } from \"./AnimalCard\";\nimport \"./Animal.css\";\n\nexport const AnimalList = () => {\n  const { animals, getAnimals } = useContext(AnimalContext);\n  const { locations, getLocations } = useContext(LocationContext);\n  const { customers, getCustomers } = useContext(CustomerContext);\n  const history = useHistory()\n\n  useEffect(() => {\n    console.log(\"AnimalList: useEffect - getAnimals\");\n    getLocations()\n      .then(getCustomers)\n      .then(getAnimals);\n  }, []);\n\n\n  return (\n    <div className=\"animals\">\n        <h2>Animals</h2>\n                <button onClick={() => {history.push(\"/animals/create\")}}>\n            Add Animal\n        </button>\n\n      {\n        animals.map(animal => {\n          const owner = customers.find(c => c.id === animal.customerId)\n          const location = locations.find(l => l.id === animal.locationId)\n\n          return <AnimalCard key={animal.id} location={location} owner={owner} animal={animal} />\n        })\n      }\n    </div>\n  );\n};","/Users/barry-shovlin/workspace/kennels/src/components/Customers/CustomerProvider.js",[],"/Users/barry-shovlin/workspace/kennels/src/components/Employees/EmployeeProvider.js",[],"/Users/barry-shovlin/workspace/kennels/src/components/Locations/LocationProvider.js",[],"/Users/barry-shovlin/workspace/kennels/src/components/Customers/CustomerList.js",["90"],"import React, { useContext, useEffect } from \"react\";\nimport { CustomerContext } from \"./CustomerProvider\";\nimport { CustomerCard } from \"./Customer\";\nimport \"./Customer.css\";\n\nexport const CustomerList = () => {\n  const { customers, getCustomers } = useContext(CustomerContext);\n\n  useEffect(() => {\n    console.log(\"CustomerList: useEffect - getCustomers\");\n    getCustomers();\n\n  }, []);\n\n\n  return (\n    <div className=\"customers\">\n      {console.log(\"CustomerList: Render\", customers)}\n      {\n        customers.map(customer => {\n          return <CustomerCard key={customer.id} customer={customer} />\n        })\n      }\n    </div>\n  );\n};","/Users/barry-shovlin/workspace/kennels/src/components/Employees/EmployeeList.js",["91"],"import React, { useContext, useEffect } from \"react\";\nimport { EmployeeContext } from \"./EmployeeProvider\";\nimport { EmployeeCard } from \"./Employee\";\nimport \"./Employee.css\";\n\nexport const EmployeeList = () => {\n  const { employees, getEmployees } = useContext(EmployeeContext);\n\n  useEffect(() => {\n    console.log(\"EmployeeList: useEffect - getEmployees\");\n    getEmployees();\n\n  }, []);\n\n\n  return (\n    <div className=\"employees\">\n      {console.log(\"EmployeeList: Render\", employees)}\n      {\n        employees.map(employee => {\n          return <EmployeeCard key={employee.id} employee={employee} />\n        })\n      }\n    </div>\n  );\n};","/Users/barry-shovlin/workspace/kennels/src/components/Locations/LocationList.js",["92"],"import React, { useContext, useEffect } from \"react\";\nimport { LocationContext } from \"./LocationProvider\";\nimport { LocationCard } from \"./Location\";\nimport \"./Location.css\";\n\nexport const LocationList = () => {\n  const { locations, getLocations } = useContext(LocationContext);\n\n  useEffect(() => {\n    console.log(\"LocationList: useEffect - getLocations\");\n    getLocations();\n\n  }, []);\n\n\n  return (\n    <div className=\"locations\">\n      {console.log(\"LocationList: Render\", locations)}\n      {\n        locations.map(location => {\n          return <LocationCard key={location.id} location={location} />\n        })\n      }\n    </div>\n  );\n};","/Users/barry-shovlin/workspace/kennels/src/components/animal/AnimalForm.js",["93"],"import React, { useContext, useEffect, useState } from \"react\"\nimport { LocationContext } from \"../Locations/LocationProvider\"\nimport { AnimalContext } from \"../animal/AnimalProvider\"\nimport { CustomerContext } from \"../Customers/CustomerProvider\"\nimport \"./Animal.css\"\nimport { useHistory } from 'react-router-dom';\n\nexport const AnimalForm = () => {\n    const { addAnimal } = useContext(AnimalContext)\n    const { locations, getLocations } = useContext(LocationContext)\n    const { customers, getCustomers } = useContext(CustomerContext)\n\n    /*\n    With React, we do not target the DOM with `document.querySelector()`. Instead, our return (render) reacts to state or props.\n\n    Define the intial state of the form inputs with useState()\n    */\n\n    const [animal, setAnimal] = useState({\n      name: \"\",\n      breed: \"\",\n      locationId: 0,\n      customerId: 0\n    });\n\n    const history = useHistory();\n\n    /*\n    Reach out to the world and get customers state\n    and locations state on initialization, so we can provide their data in the form dropdowns\n    */\n    useEffect(() => {\n      getCustomers().then(getLocations)\n    }, [])\n\n    //when a field changes, update state. The return will re-render and display based on the values in state\n        // NOTE! What's happening in this function can be very difficult to grasp. Read it over many times and ask a lot questions about it.\n    //Controlled component\n    const handleControlledInputChange = (event) => {\n      /* When changing a state object or array,\n      always create a copy, make changes, and then set state.*/\n      const newAnimal = { ...animal }\n      let selectedVal = event.target.value\n      // forms always provide values as strings. But we want to save the ids as numbers. This will cover both customer and location ids\n      if (event.target.id.includes(\"Id\")) {\n        selectedVal = parseInt(selectedVal)\n      }\n      /* Animal is an object with properties.\n      Set the property to the new value\n      using object bracket notation. */\n      newAnimal[event.target.id] = selectedVal\n      // update state\n      setAnimal(newAnimal)\n    }\n\n    const handleClickSaveAnimal = (event) => {\n      event.preventDefault() //Prevents the browser from submitting the form\n\n      const locationId = animal.locationId\n      const customerId = animal.customerId\n\n      if (locationId === 0 || customerId === 0) {\n        window.alert(\"Please select a location and a customer\")\n      } else {\n        //invoke addAnimal passing animal as an argument.\n        //once complete, change the url and display the animal list\n        addAnimal(animal)\n        .then(() => history.push(\"/animals\"))\n      }\n    }\n\n    return (\n      <form className=\"animalForm\">\n          <h2 className=\"animalForm__title\">New Animal</h2>\n          <fieldset>\n              <div className=\"form-group\">\n                  <label htmlFor=\"name\">Animal name:</label>\n                  <input type=\"text\" id=\"name\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" placeholder=\"Animal name\" value={animal.name}/>\n              </div>\n          </fieldset>\n          <fieldset>\n              <div className=\"form-group\">\n                  <label htmlFor=\"breed\">Animal breed:</label>\n                  <input type=\"text\" id=\"breed\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" placeholder=\"Animal breed\" value={animal.breed}/>\n              </div>\n          </fieldset>\n          <fieldset>\n              <div className=\"form-group\">\n                  <label htmlFor=\"location\">Assign to location: </label>\n                  <select defaultValue={animal.locationId} name=\"locationId\" id=\"locationId\" onChange={handleControlledInputChange} className=\"form-control\" >\n                      <option value=\"0\">Select a location</option>\n                      {locations.map(l => (\n                          <option key={l.id} value={l.id}>\n                              {l.name}\n                          </option>\n                      ))}\n                  </select>\n              </div>\n          </fieldset>\n          <fieldset>\n              <div className=\"form-group\">\n                  <label htmlFor=\"customerId\">Customer: </label>\n                  <select defaultValue={animal.customerId} name=\"customer\" id=\"customerId\" onChange={handleControlledInputChange} className=\"form-control\" >\n                      <option value=\"0\">Select a customer</option>\n                      {customers.map(c => (\n                          <option key={c.id} value={c.id}>\n                              {c.name}\n                          </option>\n                      ))}\n                  </select>\n              </div>\n          </fieldset>\n          <button className=\"btn btn-primary\"\n            onClick={handleClickSaveAnimal}>\n            Save Animal\n          </button>\n      </form>\n    )\n}",{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"94","replacedBy":"98"},{"ruleId":"96","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":20,"column":6,"nodeType":"102","endLine":20,"endColumn":8,"suggestions":"103"},{"ruleId":"100","severity":1,"message":"104","line":13,"column":6,"nodeType":"102","endLine":13,"endColumn":8,"suggestions":"105"},{"ruleId":"100","severity":1,"message":"106","line":13,"column":6,"nodeType":"102","endLine":13,"endColumn":8,"suggestions":"107"},{"ruleId":"100","severity":1,"message":"108","line":13,"column":6,"nodeType":"102","endLine":13,"endColumn":8,"suggestions":"109"},{"ruleId":"100","severity":1,"message":"110","line":34,"column":8,"nodeType":"102","endLine":34,"endColumn":10,"suggestions":"111"},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],["112"],["113"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getAnimals', 'getCustomers', and 'getLocations'. Either include them or remove the dependency array.","ArrayExpression",["114"],"React Hook useEffect has a missing dependency: 'getCustomers'. Either include it or remove the dependency array.",["115"],"React Hook useEffect has a missing dependency: 'getEmployees'. Either include it or remove the dependency array.",["116"],"React Hook useEffect has a missing dependency: 'getLocations'. Either include it or remove the dependency array.",["117"],"React Hook useEffect has missing dependencies: 'getCustomers' and 'getLocations'. Either include them or remove the dependency array.",["118"],"no-global-assign","no-unsafe-negation",{"desc":"119","fix":"120"},{"desc":"121","fix":"122"},{"desc":"123","fix":"124"},{"desc":"125","fix":"126"},{"desc":"127","fix":"128"},"Update the dependencies array to be: [getAnimals, getCustomers, getLocations]",{"range":"129","text":"130"},"Update the dependencies array to be: [getCustomers]",{"range":"131","text":"132"},"Update the dependencies array to be: [getEmployees]",{"range":"133","text":"134"},"Update the dependencies array to be: [getLocations]",{"range":"135","text":"136"},"Update the dependencies array to be: [getCustomers, getLocations]",{"range":"137","text":"138"},[758,760],"[getAnimals, getCustomers, getLocations]",[386,388],"[getCustomers]",[386,388],"[getEmployees]",[386,388],"[getLocations]",[1138,1140],"[getCustomers, getLocations]"]